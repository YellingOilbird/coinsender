{"version":3,"file":"static/js/141.3208f899.chunk.js","mappings":"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","sources":["shared/lib/helpers/accountExits.ts","pages/Verify/model/getAccouns.ts","widgets/status/index.styled.ts","widgets/status/verify/index.tsx","pages/Verify/model/deposit.ts","widgets/status/deposit/index.tsx","features/textarea/index.style.ts","features/textarea/index.tsx","pages/Verify/model/checkStorage.ts","widgets/status/storage/index.tsx","pages/Verify/index.tsx","shared/lib/helpers/goSend.tsx","shared/lib/helpers/convert.ts","shared/ui/Layout/style.ts"],"sourcesContent":["import {Account} from 'near-api-js'\n\nexport async function accountExists(accountId:string) {\n\n   try {\n      await new Account(window.near.connection, accountId).state();\n      return true;\n   } catch (error) {\n      console.log(error)\n      return false;\n   }\n}","import bigInt from \"big-integer\";\nimport {ConvertToYocto} from \"../../../shared/lib/helpers/convert\";\nimport {accountExists} from \"../../../shared/lib/helpers/accountExits\";\nimport {getDeposits} from \"../../../shared/lib/helpers/getDeposits\";\nimport {utils} from 'near-api-js'\n\ninterface returnFn {\n   total:number;\n   accounts:Record<string, number>\n}\n\nexport const verifyAcoounts = (\n   value: string | undefined,\n   setStatus: React.Dispatch<React.SetStateAction<string>>,\n   setError: React.Dispatch<React.SetStateAction<string>>,\n   coin:string,\n   isStorage:boolean = false,\n) => async ():Promise<returnFn | false> => {\n   let decimals = localStorage.getItem(\"token_decimals\");\n   let accounts:Record<string, number> = {};\n   let result;\n   let total = 0;\n\n   if(value !== '' && value) {\n      let input = value;\n      const pattern = RegExp(/^([0-9a-zA-Z][\\_\\-0-9a-zA-Z.]*)[\\t,|\\||=| ]([0-9\\.\\,]+$)/, 'gm');\n\n      while ((result = pattern.exec(input)) !== null) {\n         const account_name = result[1].toLowerCase();\n         const amount = parseFloat(result[2].replace(',', '.').replace(' ', ''))\n         const isAcc = await accountExists(account_name);\n\n         if (result[1] && amount && isAcc) {\n            if (accounts.hasOwnProperty(account_name)) {\n               accounts[account_name] += amount;\n            } else\n               accounts[account_name] = amount;\n               total += amount;\n         }\n      }\n\n      const deposit = await getDeposits(coin);\n\n      const totalConvert = ConvertToYocto(total, Number(decimals))\n      const totalBigAmount = bigInt(totalConvert ? totalConvert : '0').toString();\n\n      if(Number(deposit) >= Number(totalBigAmount) ) {\n         setStatus('SEND');\n      } else {\n         setStatus('DEPOSIT');\n\n         const need_to_deposit_ui= +(utils.format.formatNearAmount(\n               totalBigAmount,\n               Number(decimals)\n            )) -\n            +(utils.format.formatNearAmount(\n               deposit,\n               Number(decimals)\n            )) + 0.1;\n\n         const need_to_deposit=utils.format.parseNearAmount(need_to_deposit_ui.toString());\n\n         console.log(need_to_deposit + ' deposit')\n         console.log(need_to_deposit_ui + ' deposit_ui')\n\n         localStorage.setItem('need_to_deposit', need_to_deposit ? need_to_deposit : '')\n         localStorage.setItem('need_to_deposit_ui', need_to_deposit_ui.toFixed(0))\n      }\n\n      const operations = JSON.stringify(accounts);\n      localStorage.setItem('operations',operations)\n      localStorage.setItem('operations_number', Object.keys(accounts).length.toString())\n\n      if(coin !== 'NEAR' && isStorage) {\n         setStatus('STORAGE')\n      }\n   } else setError('There are no accounts')\n\n   console.log(accounts)\n   return {total, accounts}\n}","import styled from \"styled-components\";\n\nexport const Smails = styled.p`\n  font-size: 32px; \n  animation: blink 3s ease-in-out; \n  margin-top: 10px;\n`\n\nexport const WrapperStatus = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`","import {Smails, WrapperStatus} from \"../index.styled\";\nimport {Description} from 'shared/ui/Layout/style';\n\nexport const VerifyStatus = () => (\n   <WrapperStatus>\n      <Description>Verify accounts to delete incorrect ones</Description>\n      <Smails>✅✅✅</Smails>\n   </WrapperStatus>\n)","import {CONTRACT_ID} from \"shared/config\";\n\nexport const deposit = (setStatus: React.Dispatch<React.SetStateAction<string>>, coin:string) => async () => {\n   let getCountDeposit = localStorage.getItem(\"need_to_deposit\");\n   let getCountDepositUi = localStorage.getItem(\"need_to_deposit_ui\");\n   const token_id = localStorage.getItem(\"token_id\");\n\n   try {\n      localStorage.removeItem(\"need_to_deposit\");\n      localStorage.removeItem(\"need_to_deposit_ui\");\n\n      localStorage.setItem(\"need_to_send\", String(getCountDeposit));\n      localStorage.setItem(\"need_to_send_ui\", String(getCountDepositUi));\n\n      if (token_id === 'NEAR') {\n         let contract = window.contract;\n         await contract.deposit_near({}, window.gas, getCountDeposit)\n      } else {\n         let contractFT = window.contractFT;\n\n         console.log(getCountDeposit)\n         await contractFT(coin).ft_transfer_call({\n            receiver_id: CONTRACT_ID,\n            amount: getCountDeposit,\n            msg:\"deposit\"\n         }, window.gas, \"1\")\n      }\n\n   }catch (er) {\n      console.log(er)\n\n      localStorage.removeItem(\"need_to_deposit\");\n      localStorage.removeItem(\"need_to_deposit_ui\");\n   }\n}","import {Smails, WrapperStatus} from \"../index.styled\";\n\nexport const DepositStatus = () => (\n   <WrapperStatus>\n      <Smails>\n         <i className=\"nes-icon coin is-large\" />\n      </Smails>\n   </WrapperStatus>\n)","import styled from 'styled-components'\n\nexport const WrapperTextArea = styled.div`\n  position: relative;\n  margin: auto;\n  width: 100%;\n  padding: 1.5rem 2rem;\n  margin-top: 40px;\n  \n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const InfoTitle = styled.h2`\n  position: absolute;\n  top:-15px;\n  left: 10px;\n  padding: 0 0.5rem;\n  font-size: 1rem;\n  background-color: #fff;\n`\n\nexport const Input = styled.textarea`\n  width: 80%;\n  height: 170px;\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  outline: none;\n`\n\n\n\n\n","import {InfoTitle, Input, WrapperTextArea} from \"./index.style\";\n\ninterface Props{\n   accounts:string;\n   setAccounts:(value:string) => void;\n}\n\nexport const Textarea = ({accounts, setAccounts}: Props) => {\n   return(\n      <WrapperTextArea className='nes-container with-title' >\n         <InfoTitle>account, amount</InfoTitle>\n         <Input\n            className='nes-textarea'\n            value={accounts}\n            onChange={(e:React.ChangeEvent<HTMLTextAreaElement>) => setAccounts(e.target.value)}\n         />\n      </WrapperTextArea>\n   )\n}","import bigInt from \"big-integer\";\nimport {verifyAcoounts} from \"./getAccouns\";\n\n\nexport const checkStorage = (\n   accounts: string | undefined,\n   setStatus: React.Dispatch<React.SetStateAction<string>>,\n   coin:string\n) => async () => {\n   let contract = window.contract;\n   let contractFT = window.contractFT;\n   const gas = window.gas;\n   const operations = localStorage.getItem(\"operations\")\n\n   let operationsArr = JSON.parse(operations ? operations : '[]');\n   let checkedAccounts = Object.keys(operationsArr);\n   const token_id = localStorage.getItem('token_id');\n   // get massive of chunked accounts\n\n   let chunksAccountsFunded = async() => {\n\n      if (checkedAccounts.length > 0) {\n         const groupSize = 20;\n         let groupIndex = -1;\n         let accountGroups:any[] = [];\n         let total_already_registered = 0;\n         let fundedAccounts:any[] = [];\n         for (let i = 0; i < checkedAccounts.length; i++) {\n            if (i % groupSize === 0) {\n               groupIndex++;\n               accountGroups[groupIndex] = [];\n            }\n            accountGroups[groupIndex].push(checkedAccounts[i])\n         }\n         let index = 0;\n         // StorageBalance retrieve\n         while (index < accountGroups.length) {\n            let storageCheckAccountGroup = async () => {\n               return await Promise.all(accountGroups[index].map(async (account:any) => {\n                  let registered = await contractFT(coin).storage_balance_of({account_id: account});\n                  console.log(registered)\n                  if (registered) {\n                     total_already_registered += 1;\n                     console.log(\"Registered account: \" + account);\n                  } else {\n                     return account\n                  }\n               }));\n            }\n            await storageCheckAccountGroup().then((nonFundedAccounts) => {\n               Object.values(nonFundedAccounts).map((account) => {\n                  if (account) {\n                     console.log(account);\n                     fundedAccounts.push(account);\n                  }\n               });\n               index++;\n            })\n         }//end of while loop\n         // If we got some non funded accounts collect them\n         localStorage.setItem(\"need_to_fund\", String(fundedAccounts.length));\n         let fundedAccountsChunks = [];\n\n         if (fundedAccounts.length > 0) {\n            if (fundedAccounts.length > groupSize) {\n               let fundedAccountsSlice = fundedAccounts.slice(0, groupSize);\n               fundedAccountsChunks.push(fundedAccountsSlice);\n               console.log(\"sliced+: \"+fundedAccountsSlice.length+\" accs : \",fundedAccountsChunks);\n            } else {\n               fundedAccountsChunks.push(fundedAccounts);\n               console.log(\"sliced-: \"+fundedAccounts.length+\" accs : \",fundedAccountsChunks);\n            }\n            // Go to deposit if no more accounts to fund\n         } else {\n            fundedAccountsChunks = [];\n         }\n\n         return fundedAccountsChunks;\n      }//if we have any accounts\n\n   }// end chunkSlicer fn\n\n\n   // processing slices from chunk\n   await chunksAccountsFunded().then((async (fundedAccountsChunks) => {\n      //unneccesary double checks for a while\n      const i = 0;\n\n      if (fundedAccountsChunks!.length > 0) {\n         console.log(\"______accs_____\",fundedAccountsChunks![i].length);\n         console.log(\"[]...[]length :\",fundedAccountsChunks!.length);\n         const groupSize = 20;\n         // N accounts\n\n         // here comes [] massive[accounts](N)\n         // need to fund = N (groupSize or groupSize >= last chunk >=0)\n         if (fundedAccountsChunks![i].length <= groupSize) {\n            let total_funded_required = bigInt(fundedAccountsChunks![i].length).multiply(bigInt(\"1250000000000000000000\")).toString();\n            contract.multi_storage_deposit({\n                  accounts: fundedAccountsChunks![i],\n                  token_id: token_id\n               }, gas, total_funded_required\n            );\n            console.log(\"processed\"+ fundedAccountsChunks![i] +\"accounts\");\n            let ntf = Number(localStorage.getItem(\"need_to_fund\"));\n            localStorage.setItem(\"need_to_fund\", (ntf - fundedAccountsChunks![i]!.length).toString());\n\n            if (Number(ntf - fundedAccountsChunks![i].length) === 0) {\n               localStorage.setItem(\"transition\", '1');\n               console.log(\"fin\");\n            }\n\n         } else {\n            console.log(\"SOMETHING WRONG WITH SLICES! see slice in console! \\n\");\n         }\n      } else {\n         console.log(\"set\");\n         verifyAcoounts(\n            accounts,\n            setStatus,\n            () => {},\n            coin\n         )()\n      }\n\n   }));\n}\n","import {Smails, WrapperStatus} from \"../index.styled\";\nimport {Description} from 'shared/ui/Layout/style';\n\nexport const StorageStatus = () => (\n   <WrapperStatus>\n      <Description>Every fungible token except USN needs registered storage balance in token contract (0.00125 NEAR). When you click at CHECK STORAGE button we check this for all recipients and redirect you to approve storage registration for non-registered receiver(s)</Description>\n      <Smails>💾</Smails>\n   </WrapperStatus>\n)","import {Wrapper, Btns, Error} from 'shared/ui/Layout/style'\nimport {useEffect, useState} from \"react\";\nimport {verifyAcoounts} from \"./model/getAccouns\";\nimport {Title, Description} from 'shared/ui/Layout/style';\nimport {VerifyStatus} from \"widgets/status/verify\";\nimport {deposit} from \"./model/deposit\";\nimport {DepositStatus} from \"widgets/status/deposit\";\nimport {useGoSend} from \"shared/lib/helpers/goSend\";\nimport {Textarea} from \"features/textarea\";\nimport {useLocation} from \"react-router\";\nimport {checkStorage} from \"./model/checkStorage\";\nimport {StorageStatus} from \"../../widgets/status/storage\";\n\nconst Verify = () => {\n   const {pathname} = useLocation()\n\n   const [error, setError] = useState('')\n   const [status, setStatus] = useState('VERIFY')\n   const [accounts, setAccounts] = useState('')\n   const go = useGoSend();\n   const clearAcoounts = () => {\n      setAccounts('')\n   }\n\n   const coin = pathname.split('/')[3];\n\n   useEffect(() => {\n      const need_to_deposit = localStorage.getItem('need_to_deposit');\n      const need_to_send = localStorage.getItem('need_to_send');\n\n      const operations = localStorage.getItem('operations');\n\n      if (\n         need_to_send !== null &&\n         operations !== null &&\n         need_to_deposit === null\n      ) {\n         setStatus('SEND');\n         setAccounts(operations ? operations : '')\n      }\n   }, [])\n\n   return(\n      <Wrapper>\n         <Title>VERIFY AND CHECK ACCOUNTS</Title>\n         {status === 'VERIFY' && <>\n             <VerifyStatus />\n             <Btns className='nes-btn' onClick={verifyAcoounts(accounts, setStatus, setError, coin, coin !== 'NEAR')}>VERIFY</Btns>\n             <Btns className='nes-btn is-warning' onClick={clearAcoounts}>CLEAR ACCOUNTS</Btns>\n            </> }\n\n         {status === 'DEPOSIT' && <>\n             <DepositStatus />\n             <Btns className='nes-btn is-success' onClick={deposit(setStatus, coin)}>Deposit {Number(localStorage.getItem('need_to_deposit_ui')).toFixed(2)} {coin}</Btns>\n         </> }\n\n         {status === 'SEND' && <>\n             <Btns className='nes-btn is-warning' onClick={go}>GO TO SEND!</Btns>\n         </>\n         }\n\n         {status === 'STORAGE' && <>\n             <StorageStatus />\n             <Btns className='nes-btn' onClick={checkStorage(accounts, setStatus, coin)}>CHECK STORAGE</Btns>\n         </>\n         }\n\n         <br />\n         <Title style={{marginBottom:'5px'}}>EXAMPLES:</Title>\n         <Description>\n            <p>hello.testnet 1</p>\n            <p>world.testnet 1</p>\n         </Description>\n\n         <Error>{error}</Error>\n\n         <Textarea accounts={accounts} setAccounts={setAccounts} />\n      </Wrapper>\n   )\n}\n\nexport default Verify;","import {useLocation, useNavigate} from \"react-router\";\n\nexport const useGoSend = () => {\n   const navigate = useNavigate()\n   const {pathname} = useLocation()\n\n   function go() {\n      const token = pathname.split('/')[3]\n      navigate(`/processing/send/${token}`)\n   }\n\n   return go\n}","function trimLeadingZeroes(value:string) {\n   value = value.replace(/^0+/, '');\n   if (value === '') {\n      return '0';\n   }\n   return value;\n}\n\nexport function ConvertToYocto(amt:number=0, dec:number=0){\n   if (!amt) {\n      return null;\n   }\n\n   dec = Number(dec);\n   let convertAmt = String(amt);\n   convertAmt = convertAmt.replace(/,/g, '').trim();\n   const split = convertAmt.split('.');\n   const wholePart = split[0];\n   const fracPart = split[1] || '';\n   // if (split.length > 2 || fracPart.length > dec) {\n   //    throw new Error(`Cannot parse '${convertAmt}' as '${localStorage.getItem(\"token_ticker\")} amount`);\n   // }\n\n   return (trimLeadingZeroes(wholePart + fracPart.padEnd(dec, '0')));\n}","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  padding-top: 125px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n`\n\nexport const Description = styled.p.attrs((props: {mt:string}) => props)`\n  text-align: center;\n  font-size: 14px;\n  margin-top: ${props => props.mt && props.mt};\n`\n\nexport const Btns = styled.button.attrs((props: {mt:string}) => props)`\n  margin: auto;\n  width: 384px;\n  margin:15px 0;\n  margin-top: ${props => props.mt && props.mt};\n  \n  @media(max-width:400px) {\n    width: 300px;\n  }\n\n  @media(max-width:320px) {\n    width: 250px;\n  }\n`\n\nexport const Error = styled.p`\n  color: #b23434;\n  margin-top: 20px;\n  margin-bottom: -10px;\n`"],"names":["accountExists","accountId","Account","window","near","connection","state","console","log","verifyAcoounts","value","setStatus","setError","coin","isStorage","decimals","localStorage","getItem","accounts","total","input","pattern","RegExp","result","exec","account_name","toLowerCase","amount","parseFloat","replace","isAcc","hasOwnProperty","getDeposits","deposit","totalConvert","ConvertToYocto","Number","totalBigAmount","bigInt","toString","need_to_deposit_ui","utils","need_to_deposit","setItem","toFixed","operations","JSON","stringify","Object","keys","length","Smails","styled","WrapperStatus","VerifyStatus","getCountDeposit","getCountDepositUi","token_id","removeItem","String","contract","deposit_near","gas","contractFT","ft_transfer_call","receiver_id","CONTRACT_ID","msg","DepositStatus","className","WrapperTextArea","InfoTitle","Input","Textarea","setAccounts","onChange","e","target","checkStorage","operationsArr","parse","checkedAccounts","chunksAccountsFunded","groupSize","groupIndex","accountGroups","fundedAccounts","i","push","index","storageCheckAccountGroup","Promise","all","map","account","storage_balance_of","account_id","registered","then","nonFundedAccounts","values","fundedAccountsChunks","fundedAccountsSlice","slice","total_funded_required","multiply","multi_storage_deposit","ntf","StorageStatus","pathname","useLocation","useState","error","status","go","navigate","useNavigate","token","split","useGoSend","useEffect","need_to_send","onClick","style","marginBottom","trimLeadingZeroes","amt","dec","convertAmt","trim","wholePart","fracPart","padEnd","Wrapper","Title","Description","props","mt","Btns","Error"],"sourceRoot":""}