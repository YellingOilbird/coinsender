{"version":3,"file":"static/js/55.35225ab8.chunk.js","mappings":"wOAAaA,EAAQ,yCAAG,gGACfC,EAAWC,OAAOD,SAClBE,EAAMD,OAAOC,IACbC,EAAWC,aAAaC,QAAQ,YAHjB,SAMD,SAAbF,EANc,gCAOTH,EAASM,aAAa,CAAC,EAC1BJ,EAAK,KARO,+CAUTF,EAASM,aAAa,CACzBH,SAAUA,GACVD,EAAK,KAZO,0DAgBlBK,MACG,2EAGHC,QAAQC,IAAR,MApBkB,yBAsBlBF,MACG,6CAIHH,aAAaM,QAAQ,QAAS,QA3BZ,6EAAH,qD,mBCiDrB,EA1Ca,WACV,ICLyBC,EDKlBC,GAAYC,EAAAA,EAAAA,MAAZD,SACP,GAAwCE,EAAAA,EAAAA,UAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACP,IAAMC,EAAad,aAAaC,QAAQ,cAClCc,EAAWC,KAAKC,MAAMH,GAA0B,MAClDI,EAAcC,OAAOC,KAAKL,GAC1BM,EAAqBC,OAAOtB,aAAaC,QAAQ,sBAKlDW,EAHCS,EAEMA,EAAqB,GACZA,EAEA,GAJAH,EAAYK,OAMjC,GAAE,KAGA,UAAC,KAAD,YACG,SAAC,KAAD,CAAaC,GAAG,OAAhB,gLAIA,SAAC,KAAD,CAAaA,GAAG,OAAhB,kLAKA,UAAC,KAAD,CAAMA,GAAG,OAAOC,UAAU,qBAAqBC,SClC5BnB,EDkCiDC,GClClD,uBAAyB,+GAkB9C,GAjBUD,EAAaoB,MAAM,KAAK,GAEjC/B,EAAWC,OAAOD,SAClBE,EAAMD,OAAOC,IAGbC,EAAWC,aAAaC,QAAQ,YAChC2B,EAAW5B,aAAaC,QAAQ,kBAIhC4B,EAAY7B,aAAaC,QAAQ,aACjCa,EAAad,aAAaC,QAAQ,cAbW,SAgB1CoB,EAAqBL,KAAKC,MAAMY,GAAwB,MACxDC,EAAyB,GACK,IAA9BT,EAAmBE,OAIpB,IAASQ,KAFLb,EAAcF,KAAKC,MAAMH,GAA0B,MAG9CkB,GAASC,EAAAA,EAAAA,GAAef,EAAYa,GAAMT,OAAOM,IACvDxB,QAAQC,IAAI2B,GACZF,EAAiBI,KAAK,CAACC,WAAYJ,EAAKC,OAAQI,IAAOJ,GAAkB,KAAMK,kBAGlFP,EAAmBT,EA5BwB,OAgCxCiB,EAASR,EAAiBS,QAAO,SAAUC,EAAYC,EAAWC,EAAcC,GACnF,GAAID,EAvBM,KAuBgB,EAAG,CAC1B,IAAME,EAAYC,KAAKC,IAAIJ,EAxBpB,GAwBuCZ,EAAiBP,QAC/DiB,EAAON,KAAKS,EAAMI,MAAML,EAAOE,GACjC,CAED,OAAOJ,CACT,GAAE,IAvC2C,UAyCvCF,EAAQC,OAAT,yCACH,WAAMS,EAAaC,EAA+CP,GAAlE,+FACUM,EAAQE,KAAR,yCAAa,WAAOC,GAAP,mFACXC,EAAMD,EAAO,IACbP,EAAYC,KAAKC,IAnCnB,IAmCwBJ,EAAQ,GAAgBZ,EAAiBP,QAC/DF,EAAqBS,EAAiBiB,MAAMH,GAClD5C,aAAaM,QAAQ,oBAAqBe,EAAmBE,OAAOc,YACpErC,aAAaM,QAAQ,YAAae,EAAqBL,KAAKqC,UAAUhC,GAAsB,MAC5FrB,aAAaM,QAAQ,QAASU,KAAKqC,UAAUJ,IAE5B,SAAblD,EARa,iCASR,IAAIuD,QAAJ,yCAAY,WAAOC,EAAKC,GAAZ,6EACfpD,QAAQC,IAAI4C,GADG,SAETrD,EAAS6D,yBAAyB,CACrC1C,SAAUkC,GACVnD,EAAK,KAJO,gCAKR4D,WAAWH,EAAK,MALR,2CAAZ,yDATQ,gDAiBR,IAAID,QAAJ,yCAAY,WAAOC,EAAKC,GAAZ,sFACT5D,EAAS6D,yBAAyB,CACrC1C,SAAUkC,EACVlD,SAAUA,GACVD,EAAK,KAJO,gCAKR4D,WAAWH,EAAK,MALR,2CAAZ,yDAjBQ,iCA0BVH,GA1BU,4CAAb,wDADV,2CADG,0DA8BAE,QAAQK,QAAQ,IAAIT,MAAK,WAE5BlD,aAAaM,QAAQ,QAAS,OAGhC,IA5E6C,8FAiF9CH,MACG,wCAGHH,aAAaM,QAAQ,QAAS,QArFgB,8EDkC3C,qBAAwFK,EAAxF,gBAEA,SAAC,KAAD,CAAaa,GAAG,MAAhB,0DAIA,SAAC,KAAD,CAAMA,GAAG,OAAOC,UAAU,qBAAqBC,QAAS/B,EAAxD,wBAIR,C,uBE/CD,SAASiE,EAAkBnB,GAExB,MAAc,MADdA,EAAQA,EAAMoB,QAAQ,MAAO,KAEnB,IAEHpB,CACT,CAEM,SAASR,IAA2C,IAA5B6B,EAA2B,uDAAhB,EAAGC,EAAa,uDAAF,EACrD,IAAKD,EACF,OAAO,KAGVC,EAAMzC,OAAOyC,GACb,IAAIC,EAAaC,OAAOH,GAElBnC,GADNqC,EAAaA,EAAWH,QAAQ,KAAM,IAAIK,QACjBvC,MAAM,KACzBwC,EAAYxC,EAAM,GAClByC,EAAWzC,EAAM,IAAM,GAK7B,OAAQiC,EAAkBO,EAAYC,EAASC,OAAON,EAAK,KAC7D,C,wNCtBYO,EAAUC,EAAAA,GAAAA,IAAH,uIAQPC,EAAQD,EAAAA,GAAAA,GAAH,uEAKLE,EAAcF,EAAAA,GAAAA,EAAAA,OAAe,SAACG,GAAD,OAAwBA,CAAxB,GAAfH,CAAH,uFAGR,SAAAG,GAAK,OAAIA,EAAMlD,IAAMkD,EAAMlD,EAAtB,IAGRmD,EAAOJ,EAAAA,GAAAA,OAAAA,OAAoB,SAACG,GAAD,OAAwBA,CAAxB,GAApBH,CAAH,gNAID,SAAAG,GAAK,OAAIA,EAAMlD,IAAMkD,EAAMlD,EAAtB,IAWRoD,EAAQL,EAAAA,GAAAA,EAAH,wF","sources":["pages/Send/model/withdraw.ts","pages/Send/index.tsx","pages/Send/model/send.tsx","shared/lib/helpers/convert.ts","shared/ui/Layout/style.ts"],"sourcesContent":["export const withdraw = async () => {\n   const contract = window.contract;\n   const gas = window.gas;\n   const token_id = localStorage.getItem(\"token_id\");\n\n   try {\n      if (token_id === 'NEAR') {\n         await contract.withdraw_all({\n         }, gas, \"1\");\n      } else {\n         await contract.withdraw_all({\n            token_id: token_id\n         }, gas, \"1\");\n      }\n\n   } catch(e) {\n      alert(\n         \"ERR_CATHING_WITHDRAW_ACTION \\n\" +\n         \"check your browser console for more info!\"\n      );\n      console.log(e)\n   } finally {\n      alert(\n         \"WITHDRAW COMPLETE! ENJOY STATS!\\n\" +\n         \"click OK\"\n      )\n\n      localStorage.setItem(\"vault\", 'true');\n   }\n}\n","import {Description, Wrapper, Btns} from 'shared/ui/Layout/style'\nimport {useLocation} from \"react-router\";\nimport {send_unsafe} from \"./model/send\";\nimport {withdraw} from \"./model/withdraw\";\nimport {useEffect, useState} from \"react\";\n\n\nconst Send = () => {\n   const {pathname} = useLocation()\n   const [counetr_accs, setCounetr_accs] = useState(0)\n\n   useEffect(() => {\n      const operations = localStorage.getItem(\"operations\")\n      const accounts = JSON.parse(operations ? operations : '[]');\n      let accountsRaw = Object.keys(accounts);\n      let remaining_accounts = Number(localStorage.getItem(\"remaining_counter\"))\n\n      if(!remaining_accounts) {\n         setCounetr_accs(accountsRaw.length)\n      } else if(remaining_accounts < 25) {\n         setCounetr_accs(remaining_accounts)\n      } else {\n         setCounetr_accs(25)\n      }\n   }, [])\n\n   return(\n      <Wrapper>\n         <Description mt=\"40px\">\n            Send tokens to checked recipients via \"send\" button. If you are send to more then 25 accounts it will be sliced automatically to chunks by 25 accounts per chunk.\n         </Description>\n\n         <Description mt=\"20px\">\n            Number of remaining recepients: 2.\n            Click one more time on SEND to send to next account group (25 accounts). Check progress on redirected approval transaction page!\n         </Description>\n\n         <Btns mt=\"20px\" className='nes-btn is-warning' onClick={send_unsafe(pathname)}>send to {counetr_accs} accounts</Btns>\n\n         <Description mt=\"5px\">\n            send tokens. check remaining accounts below\n         </Description>\n\n         <Btns mt=\"20px\" className='nes-btn is-success' onClick={withdraw}>withdraw</Btns>\n\n      </Wrapper>\n   )\n}\n\nexport default Send;","import {ConvertToYocto} from \"shared/lib/helpers/convert\";\nimport bigInt from \"big-integer\";\n\nexport const send_unsafe = (coinPathname:string) => async () => {\n   const coin = coinPathname.split('/')[3]\n\n   let contract = window.contract;\n   let gas = window.gas;\n\n   // get token data\n   let token_id = localStorage.getItem(\"token_id\");\n   let decimals = localStorage.getItem(\"token_decimals\");\n   // chunks because of limit per transaction - 300 Tgas (~ 30 transfers)\n   let chunkSize = 25;\n\n   let remaining = localStorage.getItem(\"remaining\");\n   let operations = localStorage.getItem(\"operations\");\n\n   try {\n      let remaining_accounts = JSON.parse(remaining ? remaining : '[]');\n      let preparedAccounts:any[] = [];\n      if (remaining_accounts.length === 0) {\n         // get account-amount recipients\n         let accountsRaw = JSON.parse(operations ? operations : '[]');\n         //collect JSON to Array\n         for (let key in accountsRaw) {\n            const amount = ConvertToYocto(accountsRaw[key], Number(decimals))\n            console.log(amount)\n            preparedAccounts.push({account_id: key, amount: bigInt(amount ? amount : '0')!.toString() });\n         }\n      } else {\n         preparedAccounts = remaining_accounts;\n      }\n\n      // chunk Number(chunkSize) accounts from remaining recipients\n      const chunks = preparedAccounts.reduce(function (result:any, value:any, index:number, array:any[]) {\n         if (index % chunkSize === 0) {\n            const max_slice = Math.min(index + chunkSize, preparedAccounts.length);\n            result.push(array.slice(index, max_slice));\n         }\n\n         return result;\n      }, []);\n\n      await (chunks).reduce(\n         async(promise:any, chunk:{[key: string]:string, amount:string}[], index:number) => {\n            return promise.then(async (last:any) => {\n               const ret = last + 100;\n               const max_slice = Math.min((index + 1) * chunkSize, preparedAccounts.length);\n               const remaining_accounts = preparedAccounts.slice(max_slice);\n               localStorage.setItem(\"remaining_counter\", remaining_accounts.length.toString());\n               localStorage.setItem(\"remaining\", remaining_accounts ? JSON.stringify(remaining_accounts) : \"{}\");\n               localStorage.setItem(\"chunk\", JSON.stringify(chunk));\n\n               if (token_id === 'NEAR') {\n                  await new Promise(async (res, rej) => {\n                     console.log(chunk)\n                     await contract.send_from_balance_unsafe({\n                        accounts: chunk\n                     }, gas, \"1\");\n                     return setTimeout(res, 1000);\n                  });\n               } else {\n                  await new Promise(async (res, rej) => {\n                     await contract.send_from_balance_unsafe({\n                        accounts: chunk,\n                        token_id: token_id\n                     }, gas, \"1\");\n                     return setTimeout(res, 1000);\n                  });\n               }\n\n               return ret;\n            })\n         }, Promise.resolve(0)).then(() => {\n\n         localStorage.setItem(\"vault\", 'true');\n\n         // window.location.href = `https://${contractName}.page/processing/finality/${wallet.getAccountId()}`;\n      });\n   } catch (e) {\n\n      throw e\n   } finally {\n      alert(\n         \"SEND COMPLETE! ENJOY STATS! Click OK\"\n      )\n\n      localStorage.setItem(\"vault\", 'true');\n   }\n}","function trimLeadingZeroes(value:string) {\n   value = value.replace(/^0+/, '');\n   if (value === '') {\n      return '0';\n   }\n   return value;\n}\n\nexport function ConvertToYocto(amt:number=0, dec:number=0){\n   if (!amt) {\n      return null;\n   }\n\n   dec = Number(dec);\n   let convertAmt = String(amt);\n   convertAmt = convertAmt.replace(/,/g, '').trim();\n   const split = convertAmt.split('.');\n   const wholePart = split[0];\n   const fracPart = split[1] || '';\n   // if (split.length > 2 || fracPart.length > dec) {\n   //    throw new Error(`Cannot parse '${convertAmt}' as '${localStorage.getItem(\"token_ticker\")} amount`);\n   // }\n\n   return (trimLeadingZeroes(wholePart + fracPart.padEnd(dec, '0')));\n}","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  padding-top: 125px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n`\n\nexport const Description = styled.p.attrs((props: {mt:string}) => props)`\n  text-align: center;\n  font-size: 14px;\n  margin-top: ${props => props.mt && props.mt};\n`\n\nexport const Btns = styled.button.attrs((props: {mt:string}) => props)`\n  margin: auto;\n  width: 384px;\n  margin:15px 0;\n  margin-top: ${props => props.mt && props.mt};\n  \n  @media(max-width:400px) {\n    width: 300px;\n  }\n\n  @media(max-width:320px) {\n    width: 250px;\n  }\n`\n\nexport const Error = styled.p`\n  color: #b23434;\n  margin-top: 20px;\n  margin-bottom: -10px;\n`"],"names":["withdraw","contract","window","gas","token_id","localStorage","getItem","withdraw_all","alert","console","log","setItem","coinPathname","pathname","useLocation","useState","counetr_accs","setCounetr_accs","useEffect","operations","accounts","JSON","parse","accountsRaw","Object","keys","remaining_accounts","Number","length","mt","className","onClick","split","decimals","remaining","preparedAccounts","key","amount","ConvertToYocto","push","account_id","bigInt","toString","chunks","reduce","result","value","index","array","max_slice","Math","min","slice","promise","chunk","then","last","ret","stringify","Promise","res","rej","send_from_balance_unsafe","setTimeout","resolve","trimLeadingZeroes","replace","amt","dec","convertAmt","String","trim","wholePart","fracPart","padEnd","Wrapper","styled","Title","Description","props","Btns","Error"],"sourceRoot":""}