{"version":3,"file":"static/js/841.d6b15ab8.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/table/dist/index.esm.js","pages/Vault/index.tsx"],"sourcesContent":["// ../../react-shim.js\nimport React from \"react\";\n\n// src/table.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\n\n// src/table.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [TableStylesProvider, useTableStyles] = createContext({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `\n});\nvar Table = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props);\n  const { className, ...tableProps } = omitThemingProps(props);\n  return /* @__PURE__ */ React.createElement(TableStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */ React.createElement(chakra.table, {\n    role: \"table\",\n    ref,\n    __css: styles.table,\n    className: cx(\"chakra-table\", className),\n    ...tableProps\n  }));\n});\nTable.displayName = \"Table\";\n\n// src/table-container.tsx\nimport { chakra as chakra2, forwardRef as forwardRef2 } from \"@chakra-ui/system\";\nvar TableContainer = forwardRef2((props, ref) => {\n  const { overflow, overflowX, className, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    ref,\n    className: cx(\"chakra-table__container\", className),\n    ...rest,\n    __css: {\n      display: \"block\",\n      whiteSpace: \"nowrap\",\n      WebkitOverflowScrolling: \"touch\",\n      overflowX: overflow ?? overflowX ?? \"auto\",\n      overflowY: \"hidden\",\n      maxWidth: \"100%\"\n    }\n  });\n});\n\n// src/table-caption.tsx\nimport { chakra as chakra3, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar TableCaption = forwardRef3((props, ref) => {\n  const { placement = \"bottom\", ...rest } = props;\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra3.caption, {\n    ...rest,\n    ref,\n    __css: {\n      ...styles.caption,\n      captionSide: placement\n    }\n  });\n});\nTableCaption.displayName = \"TableCaption\";\n\n// src/thead.tsx\nimport { chakra as chakra4, forwardRef as forwardRef4 } from \"@chakra-ui/system\";\nvar Thead = forwardRef4((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra4.thead, {\n    ...props,\n    ref,\n    __css: styles.thead\n  });\n});\n\n// src/tbody.tsx\nimport { chakra as chakra5, forwardRef as forwardRef5 } from \"@chakra-ui/system\";\nvar Tbody = forwardRef5((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra5.tbody, {\n    ...props,\n    ref,\n    __css: styles.tbody\n  });\n});\n\n// src/tfooter.tsx\nimport { chakra as chakra6, forwardRef as forwardRef6 } from \"@chakra-ui/system\";\nvar Tfoot = forwardRef6((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra6.tfoot, {\n    ...props,\n    ref,\n    __css: styles.tfoot\n  });\n});\n\n// src/th.tsx\nimport { chakra as chakra7, forwardRef as forwardRef7 } from \"@chakra-ui/system\";\nvar Th = forwardRef7(({ isNumeric, ...rest }, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra7.th, {\n    ...rest,\n    ref,\n    __css: styles.th,\n    \"data-is-numeric\": isNumeric\n  });\n});\n\n// src/tr.tsx\nimport { chakra as chakra8, forwardRef as forwardRef8 } from \"@chakra-ui/system\";\nvar Tr = forwardRef8((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra8.tr, {\n    role: \"row\",\n    ...props,\n    ref,\n    __css: styles.tr\n  });\n});\n\n// src/td.tsx\nimport { chakra as chakra9, forwardRef as forwardRef9 } from \"@chakra-ui/system\";\nvar Td = forwardRef9(({ isNumeric, ...rest }, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra9.td, {\n    role: \"gridcell\",\n    ...rest,\n    ref,\n    __css: styles.td,\n    \"data-is-numeric\": isNumeric\n  });\n});\nexport {\n  Table,\n  TableCaption,\n  TableContainer,\n  Tbody,\n  Td,\n  Tfoot,\n  Th,\n  Thead,\n  Tr,\n  useTableStyles\n};\n","import {useEffect, useState} from \"react\";\nimport {Heading} from \"@chakra-ui/react\";\nimport {\n   Table,\n   Thead,\n   Tbody,\n   Tr,\n   Th,\n   Td,\n   TableContainer,\n} from '@chakra-ui/react'\n\nconst Vault = () => {\n   const [user_vault, setsVault] = useState<Record<string, any> | false>(false);\n   useEffect(() => {\n      async function getVault() {\n         const vault = await window.contract.get_user_vault({account_id:window.accountId})\n         console.log(vault)\n         setsVault(vault)\n      }\n\n      getVault()\n   }, [])\n   return(\n      <div style={{marginTop:\"150px\"}}>\n         <Heading textAlign='center' >üèß Current user Vault üèß</Heading>\n\n         <TableContainer mt={'40px'}>\n            <Table variant='striped' colorScheme='teal'>\n               <Thead>\n                  <Tr>\n                     <Th>Number of NEAR sends</Th>\n                     <Th>total NEAR sended</Th>\n                     <Th>tokens used</Th>\n                     <Th isNumeric>tokens balances</Th>\n                  </Tr>\n               </Thead>\n\n               <Tbody>\n                  {user_vault &&\n                     <Tr>\n                        <Td>{user_vault?.near_sends_num}</Td>\n                        <Td>{user_vault?.total_near_amount_sent}</Td>\n                         <Td>{user_vault.tokens_used.map((token:string) => token)}</Td>\n                         <Td>{user_vault.token_deposits.map((tokens:string[], index:number) => (\n                            <>\n                               {user_vault.tokens_used[index]}\n                               ({user_vault.token_deposits[index][1]})\n                            </>\n                         ))}</Td>\n                     </Tr>\n                  }\n               </Tbody>\n            </Table>\n         </TableContainer>\n      </div>\n   )\n}\n\nexport default Vault;"],"names":["cx","classNames","filter","Boolean","join","createContext","name","errorMessage","TableStylesProvider","useTableStyles","Table","forwardRef","props","ref","styles","useMultiStyleConfig","omitThemingProps","className","tableProps","React","value","chakra","role","__css","table","displayName","TableContainer","forwardRef2","overflow","overflowX","rest","chakra2","display","whiteSpace","WebkitOverflowScrolling","overflowY","maxWidth","forwardRef3","placement","chakra3","caption","captionSide","Thead","forwardRef4","chakra4","thead","Tbody","forwardRef5","chakra5","tbody","Th","forwardRef6","chakra6","tfoot","forwardRef7","isNumeric","chakra7","th","Tr","forwardRef8","chakra8","tr","Td","forwardRef9","chakra9","td","useState","user_vault","setsVault","useEffect","window","contract","get_user_vault","account_id","accountId","vault","console","log","getVault","style","marginTop","textAlign","mt","variant","colorScheme","near_sends_num","total_near_amount_sent","tokens_used","map","token","token_deposits","tokens","index"],"sourceRoot":""}